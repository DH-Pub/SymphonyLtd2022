@model IEnumerable<Symphony.Areas.Admin.Models.AdminShowModel>

@{
    ViewData["Title"] = "Admin Index";
    var adminId = User.Claims.FirstOrDefault(a => a.Type == "id").Value;
}

<h1>Index</h1>

<table id="admin" class="table table-bordered table-hover">
    <thead>
        <tr>
            <th hidden>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Role)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Where(i => i.Id.ToString() != adminId))
        {
            <tr>
                <td hidden>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Role)
                </td>
                <td>
                    @Html.ActionLink("Update", "Update", new {id=item.Id}) |
                    @Html.ActionLink("Details", "Details", new {id=item.Id}) |
                    @Html.ActionLink("Delete", "Delete", new {id=item.Id})
                </td>
            </tr>
        }
    </tbody>
</table>


@section Scripts {
    <script>
        $(() => {
            $('#admin').DataTable({
                "paging": true,
                "lengthChange": true,
                "searching": true,
                "ordering": true,
                "info": true,
                "autoWidth": false,
                order: [[0, 'desc']],
            })
        })
    </script>
}